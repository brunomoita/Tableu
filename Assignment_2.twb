<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cycling' inline='true' name='federated.1r0m5kf01a4pbo1fud8km0rfeb8k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cycling' name='textscan.0xy4ipc1de1j7n15yubl30u7253b'>
            <connection class='textscan' directory='C:/Users/Bruno Simoes/Google Drive/Georgian College/Second Term/Data Visualization/Assignment_2/Tableu/DataSets' filename='cycling.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0xy4ipc1de1j7n15yubl30u7253b' name='Diet.csv' table='[Diet#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='datetime' name='Date' ordinal='0' />
            <column datatype='integer' name='Sugar' ordinal='1' />
            <column datatype='integer' name='Carbohydrates' ordinal='2' />
            <column datatype='integer' name='Fruit' ordinal='3' />
            <column datatype='integer' name='Leaves' ordinal='4' />
            <column datatype='integer' name='Legumes' ordinal='5' />
            <column datatype='integer' name='Dairy' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0xy4ipc1de1j7n15yubl30u7253b' name='cycling.csv' table='[cycling#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Activity Type' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='Distance' ordinal='2' />
              <column datatype='integer' name='Calories' ordinal='3' />
              <column datatype='string' name='Time' ordinal='4' />
              <column datatype='string' name='Avg HR' ordinal='5' />
              <column datatype='string' name='Max HR' ordinal='6' />
              <column datatype='real' name='Avg Speed' ordinal='7' />
              <column datatype='real' name='Max Speed' ordinal='8' />
              <column datatype='string' name='Elev Gain' ordinal='9' />
              <column datatype='string' name='Elev Loss' ordinal='10' />
              <column datatype='string' name='Avg Bike Cadence' ordinal='11' />
              <column datatype='string' name='Max Bike Cadence' ordinal='12' />
              <column datatype='string' name='Normalized Power' ordinal='13' />
              <column datatype='real' name='Training Stress Score(TSS) ' ordinal='14' />
              <column datatype='string' name='Max Avg Power (20 min)' ordinal='15' />
              <column datatype='string' name='Power' ordinal='16' />
              <column datatype='string' name='Max Power' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0xy4ipc1de1j7n15yubl30u7253b' name='Diet.csv' table='[Diet#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='datetime' name='Date' ordinal='0' />
              <column datatype='integer' name='Sugar' ordinal='1' />
              <column datatype='integer' name='Carbohydrates' ordinal='2' />
              <column datatype='integer' name='Fruit' ordinal='3' />
              <column datatype='integer' name='Leaves' ordinal='4' />
              <column datatype='integer' name='Legumes' ordinal='5' />
              <column datatype='integer' name='Dairy' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Activity Type]' value='[cycling.csv].[Activity Type]' />
          <map key='[Avg Bike Cadence]' value='[cycling.csv].[Avg Bike Cadence]' />
          <map key='[Avg HR]' value='[cycling.csv].[Avg HR]' />
          <map key='[Avg Speed]' value='[cycling.csv].[Avg Speed]' />
          <map key='[Calories]' value='[cycling.csv].[Calories]' />
          <map key='[Carbohydrates]' value='[Diet.csv].[Carbohydrates]' />
          <map key='[Dairy]' value='[Diet.csv].[Dairy]' />
          <map key='[Date (Diet.csv)]' value='[Diet.csv].[Date]' />
          <map key='[Date]' value='[cycling.csv].[Date]' />
          <map key='[Distance]' value='[cycling.csv].[Distance]' />
          <map key='[Elev Gain]' value='[cycling.csv].[Elev Gain]' />
          <map key='[Elev Loss]' value='[cycling.csv].[Elev Loss]' />
          <map key='[Fruit]' value='[Diet.csv].[Fruit]' />
          <map key='[Leaves]' value='[Diet.csv].[Leaves]' />
          <map key='[Legumes]' value='[Diet.csv].[Legumes]' />
          <map key='[Max Avg Power (20 min)]' value='[cycling.csv].[Max Avg Power (20 min)]' />
          <map key='[Max Bike Cadence]' value='[cycling.csv].[Max Bike Cadence]' />
          <map key='[Max HR]' value='[cycling.csv].[Max HR]' />
          <map key='[Max Power]' value='[cycling.csv].[Max Power]' />
          <map key='[Max Speed]' value='[cycling.csv].[Max Speed]' />
          <map key='[Normalized Power]' value='[cycling.csv].[Normalized Power]' />
          <map key='[Power]' value='[cycling.csv].[Power]' />
          <map key='[Sugar]' value='[Diet.csv].[Sugar]' />
          <map key='[Time]' value='[cycling.csv].[Time]' />
          <map key='[Training Stress Score(TSS) ]' value='[cycling.csv].[Training Stress Score(TSS) ]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Diet.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Activity Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Activity Type]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Activity Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Calories</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Calories]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Calories</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg HR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Avg HR]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Avg HR</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max HR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Max HR]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Max HR</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Speed]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Avg Speed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max Speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Max Speed]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Max Speed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Elev Gain</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Elev Gain]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Elev Gain</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Elev Loss</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Elev Loss]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Elev Loss</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Bike Cadence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Avg Bike Cadence]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Avg Bike Cadence</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max Bike Cadence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Max Bike Cadence]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Max Bike Cadence</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Normalized Power</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Normalized Power]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Normalized Power</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Training Stress Score(TSS) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Training Stress Score(TSS) ]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Training Stress Score(TSS) </remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max Avg Power (20 min)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Max Avg Power (20 min)]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Max Avg Power (20 min)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Power</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Power]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Power</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max Power</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Max Power]</local-name>
            <parent-name>[cycling.csv]</parent-name>
            <remote-alias>Max Power</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cycling.csv_78843B41F743490889202A1704202D25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date (Diet.csv)]</local-name>
            <parent-name>[Diet.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Diet.csv_51E75F558349452F9BBED7BBBEC07110]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sugar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sugar]</local-name>
            <parent-name>[Diet.csv]</parent-name>
            <remote-alias>Sugar</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Diet.csv_51E75F558349452F9BBED7BBBEC07110]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carbohydrates</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Carbohydrates]</local-name>
            <parent-name>[Diet.csv]</parent-name>
            <remote-alias>Carbohydrates</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Diet.csv_51E75F558349452F9BBED7BBBEC07110]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fruit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fruit]</local-name>
            <parent-name>[Diet.csv]</parent-name>
            <remote-alias>Fruit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Diet.csv_51E75F558349452F9BBED7BBBEC07110]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Leaves</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Leaves]</local-name>
            <parent-name>[Diet.csv]</parent-name>
            <remote-alias>Leaves</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Diet.csv_51E75F558349452F9BBED7BBBEC07110]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legumes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legumes]</local-name>
            <parent-name>[Diet.csv]</parent-name>
            <remote-alias>Legumes</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Diet.csv_51E75F558349452F9BBED7BBBEC07110]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dairy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dairy]</local-name>
            <parent-name>[Diet.csv]</parent-name>
            <remote-alias>Dairy</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Diet.csv_51E75F558349452F9BBED7BBBEC07110]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Activity Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Carbohydrates]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Dairy]' role='measure' type='quantitative' />
      <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fruit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Leaves]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Legumes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sugar]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Diet.csv' datatype='table' name='[__tableau_internal_object_id__].[Diet.csv_51E75F558349452F9BBED7BBBEC07110]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cycling.csv' datatype='table' name='[__tableau_internal_object_id__].[cycling.csv_78843B41F743490889202A1704202D25]' role='measure' type='quantitative' />
      <column-instance column='[Carbohydrates]' derivation='Avg' name='[avg:Carbohydrates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carbohydrates]' derivation='Count' name='[cnt:Carbohydrates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dairy]' derivation='Count' name='[cnt:Dairy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fruit]' derivation='Count' name='[cnt:Fruit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Leaves]' derivation='Count' name='[cnt:Leaves:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carbohydrates]' derivation='CountD' name='[ctd:Carbohydrates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carbohydrates]' derivation='Median' name='[med:Carbohydrates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Activity Type]' derivation='None' name='[none:Activity Type:nk]' pivot='key' type='nominal' />
      <column-instance aggregation-param='95' column='[Carbohydrates]' derivation='Percentile' name='[prc95:Carbohydrates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carbohydrates]' derivation='Sum' name='[sum:Carbohydrates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dairy]' derivation='Sum' name='[sum:Dairy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fruit]' derivation='Sum' name='[sum:Fruit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Leaves]' derivation='Sum' name='[sum:Leaves:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Legumes]' derivation='Sum' name='[sum:Legumes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sugar]' derivation='Sum' name='[sum:Sugar:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Carbohydrates]' derivation='Var' name='[var:Carbohydrates:qk]' pivot='key' type='quantitative' />
      <group caption='Set 1' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Distance])' function='order' user:ui-marker='order'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;cycling&quot;' />
              <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;indoor_cycling&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Distance])' function='order' user:ui-marker='order'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;cycling&quot;' />
              <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;indoor_cycling&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[avg:Carbohydrates:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[cnt:Carbohydrates:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[ctd:Carbohydrates:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[med:Carbohydrates:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[prc95:Carbohydrates:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[var:Carbohydrates:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[cnt:Fruit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Fruit:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Dairy:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Legumes:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Carbohydrates:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[cnt:Leaves:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Leaves:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[cnt:Dairy:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Sugar:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tdy:Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>#2018-01-02 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2018-02-01 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2018-03-01 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2018-04-03 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2018-05-05 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2018-06-03 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2017-12-24 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2018-01-20 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2018-02-17 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2018-03-19 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2018-04-22 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2018-05-23 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2017-12-28 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-01-25 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-02-23 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-03-29 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-04-29 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2018-05-28 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2018-01-09 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2018-02-08 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2018-03-05 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2018-04-10 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2018-05-10 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2018-01-04 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2018-02-03 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2018-03-02 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2018-04-07 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2018-05-06 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2018-06-04 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2017-12-29 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2018-01-27 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2018-02-24 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2018-03-31 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2018-05-01 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2018-05-30 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2018-01-18 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2018-02-15 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2018-03-16 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2018-04-18 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2018-05-20 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2017-12-25 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2018-01-21 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2018-02-18 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2018-03-20 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2018-04-24 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2018-05-25 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2018-01-16 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2018-02-13 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2018-03-10 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2018-04-16 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2018-05-15 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2017-12-30 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2018-01-28 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2018-02-25 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2018-04-01 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2018-05-02 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2018-06-01 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2018-01-11 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2018-02-10 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2018-03-06 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2018-04-11 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2018-05-12 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2018-01-13 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2018-02-11 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2018-03-07 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2018-04-14 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2018-05-13 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2018-01-17 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2018-02-14 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2018-03-13 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2018-04-17 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2018-05-19 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2018-01-19 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2018-02-16 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2018-03-17 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2018-04-21 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2018-05-22 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2018-01-06 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2018-02-04 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2018-03-03 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2018-04-08 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2018-05-08 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2018-06-05 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2017-12-31 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2018-01-30 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2018-02-27 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2018-04-02 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2018-05-03 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2018-06-02 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2017-12-26 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2018-01-23 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2018-02-20 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2018-03-27 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2018-04-27 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2018-05-26 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2018-01-14 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2018-02-12 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2018-03-09 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2018-04-15 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2018-05-14 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2018-01-07 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2018-02-06 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2018-03-04 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2018-04-09 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2018-05-09 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2017-12-27 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2018-01-24 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2018-02-22 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2018-03-28 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2018-04-28 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2018-05-27 00:00:00#</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Diet.csv' id='Diet.csv_51E75F558349452F9BBED7BBBEC07110'>
            <properties context=''>
              <relation connection='textscan.0xy4ipc1de1j7n15yubl30u7253b' name='Diet.csv' table='[Diet#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='datetime' name='Date' ordinal='0' />
                  <column datatype='integer' name='Sugar' ordinal='1' />
                  <column datatype='integer' name='Carbohydrates' ordinal='2' />
                  <column datatype='integer' name='Fruit' ordinal='3' />
                  <column datatype='integer' name='Leaves' ordinal='4' />
                  <column datatype='integer' name='Legumes' ordinal='5' />
                  <column datatype='integer' name='Dairy' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='cycling.csv' id='cycling.csv_78843B41F743490889202A1704202D25'>
            <properties context=''>
              <relation connection='textscan.0xy4ipc1de1j7n15yubl30u7253b' name='cycling.csv' table='[cycling#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='Activity Type' ordinal='0' />
                  <column datatype='datetime' name='Date' ordinal='1' />
                  <column datatype='real' name='Distance' ordinal='2' />
                  <column datatype='integer' name='Calories' ordinal='3' />
                  <column datatype='string' name='Time' ordinal='4' />
                  <column datatype='string' name='Avg HR' ordinal='5' />
                  <column datatype='string' name='Max HR' ordinal='6' />
                  <column datatype='real' name='Avg Speed' ordinal='7' />
                  <column datatype='real' name='Max Speed' ordinal='8' />
                  <column datatype='string' name='Elev Gain' ordinal='9' />
                  <column datatype='string' name='Elev Loss' ordinal='10' />
                  <column datatype='string' name='Avg Bike Cadence' ordinal='11' />
                  <column datatype='string' name='Max Bike Cadence' ordinal='12' />
                  <column datatype='string' name='Normalized Power' ordinal='13' />
                  <column datatype='real' name='Training Stress Score(TSS) ' ordinal='14' />
                  <column datatype='string' name='Max Avg Power (20 min)' ordinal='15' />
                  <column datatype='string' name='Power' ordinal='16' />
                  <column datatype='string' name='Max Power' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Date]' />
              <expression op='[Date (Diet.csv)]' />
            </expression>
            <first-end-point object-id='cycling.csv_78843B41F743490889202A1704202D25' />
            <second-end-point object-id='Diet.csv_51E75F558349452F9BBED7BBBEC07110' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Daily Food Group Intake'>
      <table>
        <view>
          <datasources>
            <datasource caption='cycling' name='federated.1r0m5kf01a4pbo1fud8km0rfeb8k' />
          </datasources>
          <datasource-dependencies datasource='federated.1r0m5kf01a4pbo1fud8km0rfeb8k'>
            <column datatype='integer' name='[Carbohydrates]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Dairy]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Date (Diet.csv)]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Fruit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Leaves]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Legumes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sugar]' role='measure' type='quantitative' />
            <column-instance column='[Date (Diet.csv)]' derivation='Day' name='[dy:Date (Diet.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date (Diet.csv)]' derivation='MDY' name='[md:Date (Diet.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Carbohydrates]' derivation='Sum' name='[sum:Carbohydrates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dairy]' derivation='Sum' name='[sum:Dairy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fruit]' derivation='Sum' name='[sum:Fruit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Leaves]' derivation='Sum' name='[sum:Leaves:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Legumes]' derivation='Sum' name='[sum:Legumes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sugar]' derivation='Sum' name='[sum:Sugar:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[dy:Date (Diet.csv):ok]'>
            <groupfilter from='1' function='range' level='[dy:Date (Diet.csv):ok]' to='31' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[dy:Date (Diet.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Carbohydrates:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Dairy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Fruit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Leaves:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Legumes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Sugar:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[md:Date (Diet.csv):ok]</rows>
        <cols>([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Carbohydrates:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Dairy:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Fruit:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Leaves:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Legumes:qk] + [federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Sugar:qk])))))</cols>
      </table>
      <simple-id uuid='{079EC75C-31AF-4D79-9D61-1EC98F510FF2}' />
    </worksheet>
    <worksheet name='Kilometers Traveled by Bicycle per Day'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Kilometers Traveled by Bicycle per Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cycling' name='federated.1r0m5kf01a4pbo1fud8km0rfeb8k' />
          </datasources>
          <datasource-dependencies datasource='federated.1r0m5kf01a4pbo1fud8km0rfeb8k'>
            <column datatype='string' name='[Activity Type]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column datatype='string' name='[Time]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Activity Type]' derivation='None' name='[none:Activity Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time]' derivation='None' name='[none:Time:nk]' pivot='key' type='nominal' />
            <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[dy:Date:ok]'>
            <groupfilter from='1' function='range' level='[dy:Date:ok]' to='31' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Activity Type:nk]' />
              <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;cyclocross&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Time:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]' member-value='&quot;cyclocross&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[dy:Date:ok]</column>
            <column>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#d4d4d4' />
            <format attr='border-color' value='#f28e2b' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d4d4d4' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[tdy:Date:ok]' />
              <text column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[tdy:Date:ok] / [federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Time:nk])</rows>
        <cols>([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk] * [federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk])</cols>
      </table>
      <simple-id uuid='{6BEE52BB-1F1B-4988-88BB-4770C0979E71}' />
    </worksheet>
    <worksheet name='Weekly Cycling Progress'>
      <table>
        <view>
          <datasources>
            <datasource caption='cycling' name='federated.1r0m5kf01a4pbo1fud8km0rfeb8k' />
          </datasources>
          <datasource-dependencies datasource='federated.1r0m5kf01a4pbo1fud8km0rfeb8k'>
            <column datatype='string' name='[Activity Type]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column-instance column='[Activity Type]' derivation='None' name='[none:Activity Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;cycling&quot;' />
              <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;indoor_cycling&quot;' />
              <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;road_biking&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[wk:Date:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[wk:Date:ok]' member='52' />
                <groupfilter function='member' level='[wk:Date:ok]' member='53' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]</column>
            <column>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]</rows>
        <cols>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date:ok]</cols>
      </table>
      <simple-id uuid='{1F0C7828-B385-4069-B5A0-37F8A4B708B7}' />
    </worksheet>
    <worksheet name='Weekly Food Group Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='cycling' name='federated.1r0m5kf01a4pbo1fud8km0rfeb8k' />
          </datasources>
          <datasource-dependencies datasource='federated.1r0m5kf01a4pbo1fud8km0rfeb8k'>
            <column datatype='integer' name='[Carbohydrates]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Dairy]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Date (Diet.csv)]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Fruit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Leaves]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Legumes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sugar]' role='measure' type='quantitative' />
            <column-instance column='[Carbohydrates]' derivation='Sum' name='[sum:Carbohydrates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dairy]' derivation='Sum' name='[sum:Dairy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fruit]' derivation='Sum' name='[sum:Fruit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Leaves]' derivation='Sum' name='[sum:Leaves:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Legumes]' derivation='Sum' name='[sum:Legumes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sugar]' derivation='Sum' name='[sum:Sugar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (Diet.csv)]' derivation='Week' name='[wk:Date (Diet.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date (Diet.csv):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[wk:Date (Diet.csv):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[wk:Date (Diet.csv):ok]' member='52' />
                <groupfilter function='member' level='[wk:Date (Diet.csv):ok]' member='53' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date (Diet.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d3b348' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Carbohydrates:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Dairy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Fruit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Leaves:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Legumes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Sugar:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Carbohydrates:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Dairy:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Fruit:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Leaves:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Legumes:qk] + [federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Sugar:qk])))))</rows>
        <cols>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date (Diet.csv):ok]</cols>
      </table>
      <simple-id uuid='{09FF2AC7-C59E-4E8D-A20C-C6E9FC6096F3}' />
    </worksheet>
    <worksheet name='Weekly Food Group Line Chat'>
      <table>
        <view>
          <datasources>
            <datasource caption='cycling' name='federated.1r0m5kf01a4pbo1fud8km0rfeb8k' />
          </datasources>
          <datasource-dependencies datasource='federated.1r0m5kf01a4pbo1fud8km0rfeb8k'>
            <column datatype='integer' name='[Carbohydrates]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Dairy]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Date (Diet.csv)]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Fruit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Leaves]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Legumes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sugar]' role='measure' type='quantitative' />
            <column-instance column='[Carbohydrates]' derivation='Sum' name='[sum:Carbohydrates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dairy]' derivation='Sum' name='[sum:Dairy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fruit]' derivation='Sum' name='[sum:Fruit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Leaves]' derivation='Sum' name='[sum:Leaves:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Legumes]' derivation='Sum' name='[sum:Legumes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sugar]' derivation='Sum' name='[sum:Sugar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (Diet.csv)]' derivation='Week' name='[wk:Date (Diet.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date (Diet.csv)]' derivation='Week' name='[wk:Date (Diet.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (Diet.csv)]' derivation='Year' name='[yr:Date (Diet.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date (Diet.csv):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[wk:Date (Diet.csv):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[wk:Date (Diet.csv):ok]' member='52' />
                <groupfilter function='member' level='[wk:Date (Diet.csv):ok]' member='53' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date (Diet.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date (Diet.csv):qk]' value='iww' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#ffffff' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Carbohydrates:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Dairy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Fruit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Leaves:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Legumes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Sugar:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Carbohydrates:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Dairy:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Fruit:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Leaves:qk] + ([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Legumes:qk] + [federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Sugar:qk])))))</rows>
        <cols>([federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[yr:Date (Diet.csv):ok] / [federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date (Diet.csv):ok])</cols>
      </table>
      <simple-id uuid='{46607E1C-18A8-4305-865B-6AE3F59408B1}' />
    </worksheet>
    <worksheet name='Weeks with Top Distance Covered'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weeks with Top Distance Covered</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cycling' name='federated.1r0m5kf01a4pbo1fud8km0rfeb8k' />
          </datasources>
          <datasource-dependencies datasource='federated.1r0m5kf01a4pbo1fud8km0rfeb8k'>
            <column datatype='string' name='[Activity Type]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column-instance column='[Activity Type]' derivation='None' name='[none:Activity Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Date])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;cycling&quot;' />
                  <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;indoor_cycling&quot;' />
                  <groupfilter function='member' level='[none:Activity Type:nk]' member='&quot;road_biking&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[wk:Date:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[wk:Date:ok]' member='52' />
                <groupfilter function='member' level='[wk:Date:ok]' member='53' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]</column>
            <column>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#000000' />
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#d4d4d4' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#8cd17d' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]' />
              <size column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]' />
              <text column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date:ok]' />
              <text column='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5994593E-05FD-4A58-9BD9-0D03ABA35C59}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Kilometers Traveled by Bicycle per Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[tdy:Date:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[cnt:Distance:qk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Time:nk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[tdy:Date:ok]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10F98616-DE31-498E-AEF2-5FE1C463F815}' />
    </window>
    <window class='worksheet' name='Weeks with Top Distance Covered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Distance:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date:ok]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9394E19-B5AD-40FF-BC06-63FE52E569B8}' />
    </window>
    <window class='worksheet' name='Weekly Cycling Progress'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{004769F4-4CA5-4D15-BAE7-32780C7046E1}' />
    </window>
    <window class='worksheet' name='Weekly Food Group Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04b6ioq1873rgm1h2c8qx1xxw55l].[max:Dairy:qk]</field>
            <field>[federated.04b6ioq1873rgm1h2c8qx1xxw55l].[none:Date:nk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[:Measure Names]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[__tableau_internal_object_id__].[cnt:Diet.csv_51E75F558349452F9BBED7BBBEC07110:qk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date (Diet.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DDE71996-80C8-43D0-A6DB-FF9F01AF1AD5}' />
    </window>
    <window class='worksheet' name='Weekly Food Group Line Chat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04b6ioq1873rgm1h2c8qx1xxw55l].[max:Dairy:qk]</field>
            <field>[federated.04b6ioq1873rgm1h2c8qx1xxw55l].[none:Date:nk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[:Measure Names]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[sum:Dairy:qk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[twk:Date (Diet.csv):qk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wk:Date (Diet.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DAA9E75-A79D-46A4-9973-47CD8511DA1E}' />
    </window>
    <window class='worksheet' maximized='true' name='Daily Food Group Intake'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[dy:Date (Diet.csv):ok]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[none:Activity Type:nk]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[qr:Date (Diet.csv):ok]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[wd:Date (Diet.csv):ok]</field>
            <field>[federated.1r0m5kf01a4pbo1fud8km0rfeb8k].[yr:Date (Diet.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA314BB9-0A77-4839-83A2-7E298BCD18FE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Daily Food Group Intake' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Kilometers Traveled by Bicycle per Day' width='192'>
      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
      EPW303GNQ5IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Weekly Cycling Progress' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weekly Food Group Bar Chart' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Weekly Food Group Line Chat' width='192'>
      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
      CzGW5Pe+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weeks with Top Distance Covered' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
